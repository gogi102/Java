- Hashset
  -set 인터페이스에서 지원하는 구현 클래스이다.
  -순서대로 입력되지 않고 일정하게 유지도지 않음.
  -null 요소도 허용이 된다.
  -중복을 허용하지 않는다.(매력적인 부분)

중복을 걸러내는 과정
-객체를 저장하기 전에 먼저 객체의 hashcode() 메소드를 호출해서 해시 코드를 얻어 낸 다음
 저장되어 있는 객체들의 해시 코드와 비교한 뒤 같은 해시 코드가 있다면
 equals() 메소드로 두 객체를 비교해서 true가 나오면 동일한 객체로 판단하고 중복 저장을 하지 않는다.

선언
HashtSet<Integer> set = new HashSet<Integer>();

메소드
add(value) : 값을 추가
remove(value) : 값 제거
clear() : 모든 값을 삭제
size() : HashSet 크기
contains(value) : 값이 있는지 확인

출력
전체 출력
System.out.println(set);
-전체출력은 위와 같다
-get 메소드가 존재하지 않아서 하나의 객체를 가지고 올 수가 없다.
-하나의 객체를 가져오기 위해서는 Iterator를 사용해야 한다.
 -전체 객체를 대상으로 한 번씩 반복해서 가져오는 반복자이다.
 -iterator() 메소드를 호출하면 얻을 수 있다.
 -iterator()에서 하나의 객체를 가져올 때는 next() 메소드를 사용한다
 -먼저 가져올 객체가 있는지 확인하기 위해서 hasNext() 메소드를 사용하여 확인하는 것이 좋다
  -hasNext() 메소드는 가져올 객체가 있으면 true 없으면 false를 반환한다
Iterator iter = set.iterator();
while(iter.hasNext()){
      System.out.println(iter.next());
}

